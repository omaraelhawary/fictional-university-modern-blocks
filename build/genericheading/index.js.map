{"version":3,"file":"genericheading/index.js","mappings":"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","sources":["webpack://fictional-university-fse/./src/genericheading/edit.js","webpack://fictional-university-fse/external window \"ReactJSXRuntime\"","webpack://fictional-university-fse/external window [\"wp\",\"blockEditor\"]","webpack://fictional-university-fse/external window [\"wp\",\"blocks\"]","webpack://fictional-university-fse/external window [\"wp\",\"components\"]","webpack://fictional-university-fse/webpack/bootstrap","webpack://fictional-university-fse/webpack/runtime/compat get default export","webpack://fictional-university-fse/webpack/runtime/define property getters","webpack://fictional-university-fse/webpack/runtime/hasOwnProperty shorthand","webpack://fictional-university-fse/webpack/runtime/make namespace object","webpack://fictional-university-fse/./src/genericheading/index.js"],"sourcesContent":["import { ToolbarGroup, ToolbarButton } from \"@wordpress/components\"\nimport { RichText, BlockControls, useBlockProps } from \"@wordpress/block-editor\"\n\nexport default function Edit(props) {\n    const blockProps = useBlockProps();\n\n    function handleTextChange(x) {\n        props.setAttributes({ text: x })\n    }\n\n    return (\n        <div {...blockProps}>\n            <BlockControls>\n                <ToolbarGroup>\n                    <ToolbarButton onClick={() => props.setAttributes({ size: \"large\" })} isPressed={props.attributes.size === \"large\"}>Large</ToolbarButton>\n                    <ToolbarButton onClick={() => props.setAttributes({ size: \"medium\" })} isPressed={props.attributes.size === \"medium\"}>Medium</ToolbarButton>\n                    <ToolbarButton onClick={() => props.setAttributes({ size: \"small\" })} isPressed={props.attributes.size === \"small\"}>Small</ToolbarButton>\n                </ToolbarGroup>\n            </BlockControls>\n            <RichText allowedFormats={[\"core/bold\", \"core/italic\"]} tagName=\"h1\" className={`headline headline--${props.attributes.size}`} value={props.attributes.text} onChange={handleTextChange} />\n        </div>\n    )\n}","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\"\nimport { RichText } from \"@wordpress/block-editor\"\nimport metadata from \"./block.json\"\nimport Edit from \"./edit\"\n\nfunction Save(props) {\n\n    function createTagName() {\n\n        switch (props.attributes.size) {\n            case \"large\":\n                return \"h1\"\n            case \"medium\":\n                return \"h2\"\n            case \"small\":\n                return \"h3\"\n        }\n    }\n\n    return <RichText.Content value={props.attributes.text} tagName={createTagName()} className={`headline headline--${props.attributes.size}`} />\n}\n\nregisterBlockType(metadata.name, {\n    edit: Edit,\n    save: Save\n})"],"names":["ToolbarGroup","ToolbarButton","RichText","BlockControls","useBlockProps","jsx","_jsx","jsxs","_jsxs","Edit","props","blockProps","handleTextChange","x","setAttributes","text","children","onClick","size","isPressed","attributes","allowedFormats","tagName","className","value","onChange","registerBlockType","metadata","Save","createTagName","Content","name","edit","save"],"sourceRoot":""}